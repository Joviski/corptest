{"ast":null,"code":"var _jsxFileName = \"/home/youssefabdelsattar/corporatica/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getFilenameFromContentDisposition(contentDisposition) {\n  if (!contentDisposition) {\n    return null;\n  }\n\n  // Regular expression to extract filename from Content-Disposition\n  const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n  const matches = filenameRegex.exec(contentDisposition);\n  if (matches != null && matches[1]) {\n    // Remove quotes around the filename if present\n    return matches[1].replace(/['\"]/g, '');\n  }\n  return null;\n}\nfunction FileUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) {\n      alert('Please select a file first!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:5000/analyze', {\n        method: 'POST',\n        body: formData\n      });\n\n      // Check the response type\n      const contentDisposition = response.headers.get('Content-Disposition');\n      const filename = getFilenameFromContentDisposition(contentDisposition);\n      if (contentDisposition && filename) {\n        // Handle file download\n        const blob = await response.blob();\n        const downloadUrl = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = downloadUrl;\n        a.download = filename; // you can get the filename from Content-Disposition header\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n      } else {\n        // Handle JSON response\n        alert('Received CSV');\n        const data = await response.json();\n        console.log(data);\n        alert('Received JSON response');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error uploading file');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Upload file:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["logo","React","useState","jsxDEV","_jsxDEV","getFilenameFromContentDisposition","contentDisposition","filenameRegex","matches","exec","replace","FileUpload","_s","file","setFile","handleFileChange","event","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","response","fetch","method","body","headers","get","filename","blob","downloadUrl","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","remove","data","json","console","log","error","onSubmit","children","src","className","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/home/youssefabdelsattar/corporatica/frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\n\nfunction getFilenameFromContentDisposition(contentDisposition) {\n  if (!contentDisposition) {\n      return null;\n  }\n\n  // Regular expression to extract filename from Content-Disposition\n  const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n  const matches = filenameRegex.exec(contentDisposition);\n\n  if (matches != null && matches[1]) {\n      // Remove quotes around the filename if present\n      return matches[1].replace(/['\"]/g, '');\n  }\n\n  return null;\n}\n\n\nfunction FileUpload() {\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!file) {\n      alert('Please select a file first!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await fetch('http://localhost:5000/analyze', {\n          method: 'POST',\n          body: formData,\n      });\n\n      // Check the response type\n      const contentDisposition = response.headers.get('Content-Disposition');\n      const filename = getFilenameFromContentDisposition(contentDisposition);\n      if (contentDisposition && filename) {\n          // Handle file download\n          const blob = await response.blob();\n          const downloadUrl = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = downloadUrl;\n          a.download = filename; // you can get the filename from Content-Disposition header\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n      } else {\n          // Handle JSON response\n          alert('Received CSV');\n          const data = await response.json();\n          console.log(data);\n          alert('Received JSON response');\n      }\n    } catch (error) {\n        console.error('Error:', error);\n        alert('Error uploading file');\n    }\n  };\n\n  \n  return (\n    \n    <form onSubmit={handleSubmit}>\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <label>\n        Upload file:\n        <input type=\"file\" onChange={handleFileChange} />\n      </label>\n      <button type=\"submit\">Upload</button>\n    </form>\n  );\n}\n\nexport default FileUpload;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}